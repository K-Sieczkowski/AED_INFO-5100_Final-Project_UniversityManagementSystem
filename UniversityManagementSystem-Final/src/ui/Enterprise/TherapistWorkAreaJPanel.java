/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.Enterprise;

import Business.Organizations.HospitalOrganization;
import Business.Organizations.MulticulturalOrganization;
import Business.Organizations.Organization;
import Business.Organizations.PoliceOrganization;
import Business.Organizations.RealtorOrganization;
import Business.Organizations.TherapistOrganization;
import Business.Roles.CommunityCulturalAidRole;
import Business.Roles.DoctorRole;
import Business.Roles.TherapistOrgManagerRole;
import Business.SendEmail.SendEmail;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.CommunityRequest;
import Business.WorkQueue.HealthRequest;
import Business.WorkQueue.HousingRequest;
import Business.WorkQueue.WorkRequest;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author arfinansari
 */
public class TherapistWorkAreaJPanel extends javax.swing.JPanel {
    private UserAccount userAccount;
    private JPanel userProcessContainer;
    private Organization organization;
    private SendEmail sendEmail;

    /**
     * Creates new form CommunityWorkAreaJPanel
     */
    public TherapistWorkAreaJPanel() {
        initComponents();
        this.userAccount = userAccount;
        this.userProcessContainer = userProcessContainer;
        this.organization = organization;
        uniEmpWelcomeTxt.setText("Welcome " + userAccount.getEmployee().getName() + "!");
        populateTable();
        displayEmployeesInCombo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel8 = new javax.swing.JPanel();
        TheSearchBarTxt = new javax.swing.JTextField();
        lblSearch = new javax.swing.JLabel();
        AcceptRequestTM = new javax.swing.JButton();
        declineRequestTM = new javax.swing.JButton();
        lblPL = new javax.swing.JLabel();
        lblDL = new javax.swing.JLabel();
        hospitalTxt = new javax.swing.JTextField();
        jScrollPane9 = new javax.swing.JScrollPane();
        TherapistEmployeeTbl = new javax.swing.JTable();
        commentTxt = new javax.swing.JTextField();
        cbPL = new javax.swing.JComboBox<>();
        updateBtn = new javax.swing.JButton();
        theSearchBtn = new javax.swing.JButton();
        clearTheSearchBtn = new javax.swing.JButton();
        btnAssign = new javax.swing.JButton();
        lblAssignEmployee = new javax.swing.JLabel();
        cbAssignEmployee = new javax.swing.JComboBox<>();
        btnViewTM = new javax.swing.JButton();
        uniEmpWelcomeTxt = new javax.swing.JLabel();
        lblDL1 = new javax.swing.JLabel();
        lblTitle = new javax.swing.JLabel();

        setMinimumSize(new java.awt.Dimension(1050, 850));
        setPreferredSize(new java.awt.Dimension(1050, 850));

        jTabbedPane2.setBackground(new java.awt.Color(224, 237, 242));
        jTabbedPane2.setMinimumSize(new java.awt.Dimension(1070, 850));
        jTabbedPane2.setPreferredSize(new java.awt.Dimension(1070, 850));

        jPanel8.setBackground(new java.awt.Color(224, 237, 242));
        jPanel8.setPreferredSize(new java.awt.Dimension(1070, 870));

        lblSearch.setText("Search Bar:");

        AcceptRequestTM.setText("Accept Request");
        AcceptRequestTM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AcceptRequestTMActionPerformed(evt);
            }
        });

        declineRequestTM.setText("Decline Request");
        declineRequestTM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                declineRequestTMActionPerformed(evt);
            }
        });

        lblPL.setText("Priority Level");

        lblDL.setText("Comments");

        hospitalTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hospitalTxtActionPerformed(evt);
            }
        });

        TherapistEmployeeTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Priority Level", "Request Date", "Status", "Student Name", "Type", "Comments", "Assigned Employee", "Completed Date"
            }
        ));
        jScrollPane9.setViewportView(TherapistEmployeeTbl);

        commentTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                commentTxtActionPerformed(evt);
            }
        });

        cbPL.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "P1", "P2", "P3", "P4" }));
        cbPL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbPLActionPerformed(evt);
            }
        });

        updateBtn.setText("Update");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });

        theSearchBtn.setText("Search");
        theSearchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                theSearchBtnActionPerformed(evt);
            }
        });

        clearTheSearchBtn.setText("Clear Search");
        clearTheSearchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearTheSearchBtnActionPerformed(evt);
            }
        });

        btnAssign.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/images/icons8-add-user-male-24.png"))); // NOI18N
        btnAssign.setText("Assign");
        btnAssign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignActionPerformed(evt);
            }
        });

        lblAssignEmployee.setText("Assign Employee");

        btnViewTM.setText("View");
        btnViewTM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewTMActionPerformed(evt);
            }
        });

        uniEmpWelcomeTxt.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N

        lblDL1.setText("Type");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addComponent(uniEmpWelcomeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 502, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel8Layout.createSequentialGroup()
                                    .addComponent(AcceptRequestTM)
                                    .addGap(18, 18, 18)
                                    .addComponent(declineRequestTM)
                                    .addGap(18, 18, 18)
                                    .addComponent(btnViewTM, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(jPanel8Layout.createSequentialGroup()
                                        .addComponent(lblSearch)
                                        .addGap(18, 18, 18)
                                        .addComponent(TheSearchBarTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 509, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(theSearchBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(18, 18, 18)
                                        .addComponent(clearTheSearchBtn))
                                    .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 872, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel8Layout.createSequentialGroup()
                                    .addComponent(lblAssignEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(cbAssignEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, 491, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btnAssign, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel8Layout.createSequentialGroup()
                                    .addGap(361, 361, 361)
                                    .addComponent(updateBtn)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(hospitalTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 492, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel8Layout.createSequentialGroup()
                                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lblDL)
                                        .addComponent(lblPL)
                                        .addComponent(lblDL1))
                                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel8Layout.createSequentialGroup()
                                            .addGap(77, 77, 77)
                                            .addComponent(cbPL, javax.swing.GroupLayout.PREFERRED_SIZE, 492, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(commentTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 492, javax.swing.GroupLayout.PREFERRED_SIZE))))))))
                .addContainerGap(80, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(uniEmpWelcomeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSearch)
                    .addComponent(TheSearchBarTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(theSearchBtn)
                    .addComponent(clearTheSearchBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AcceptRequestTM)
                    .addComponent(declineRequestTM)
                    .addComponent(btnViewTM))
                .addGap(71, 71, 71)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAssignEmployee)
                    .addComponent(cbAssignEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAssign))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbPL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPL))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hospitalTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDL1))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(commentTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDL))
                .addGap(18, 18, 18)
                .addComponent(updateBtn)
                .addGap(69, 69, 69))
        );

        jTabbedPane2.addTab("View Therapist Request", jPanel8);

        lblTitle.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Therapist Work Area Panel");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1047, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(80, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 766, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void AcceptRequestTMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AcceptRequestTMActionPerformed
        int selectedRowIndex = TherapistEmployeeTbl.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row.");
            return;
        }

        else if(TherapistEmployeeTbl.getValueAt(selectedRowIndex, 2).equals("Canceled")) {
            JOptionPane.showMessageDialog(this, "Request was canceled, please make a new selection.");
        }

        else if(TherapistEmployeeTbl.getValueAt(selectedRowIndex, 2).equals("Completed")) {
            JOptionPane.showMessageDialog(this, "Request has already been completed.");
        }

        else if(TherapistEmployeeTbl.getValueAt(selectedRowIndex, 2).equals("Accepted")) {
            JOptionPane.showMessageDialog(this, "Request has already been accepted, please make a new selection.");
        }

        else if(TherapistEmployeeTbl.getValueAt(selectedRowIndex, 2).equals("Assigned")) {
            JOptionPane.showMessageDialog(this, "Request has already been assigned.");
        }

        else if(TherapistEmployeeTbl.getValueAt(selectedRowIndex, 2).equals("In Progress")) {
            JOptionPane.showMessageDialog(this, "Request is already in progress.");
        }

        else if(TherapistEmployeeTbl.getValueAt(selectedRowIndex, 2).equals("Submitted")) {

            HealthRequest healthRequest = (HealthRequest) ((TherapistOrganization)organization).getWorkQueue().getWorkQueueList().get(selectedRowIndex);
            healthRequest.setStatus("Accepted");

            JOptionPane.showMessageDialog(this, "The request has been successfully accepted.");

        }
        populateTable();
    }//GEN-LAST:event_AcceptRequestTMActionPerformed

    private void declineRequestTMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_declineRequestTMActionPerformed
        int selectedRowIndex = TherapistEmployeeTbl.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row.");
            return;
        }

        else if(TherapistEmployeeTbl.getValueAt(selectedRowIndex, 2).equals("Canceled")) {
            JOptionPane.showMessageDialog(this, "Request was already canceled, please make a new selection.");
        }

        else if(TherapistEmployeeTbl.getValueAt(selectedRowIndex, 2).equals("Completed")) {
            JOptionPane.showMessageDialog(this, "Request was already completed, can no longer be canceled.");
        }

        else if(selectedRowIndex >0){
            int dialogInput = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog(this, "Are you sure you would like to decline the request?", "Decline Request", dialogInput);
            if (dialogResult == 0) {

                HealthRequest healthRequest = (HealthRequest) ((HospitalOrganization)organization).getWorkQueue().getWorkQueueList().get(selectedRowIndex);
                healthRequest.setStatus("Canceled");
                JOptionPane.showMessageDialog(this, "The request has been declined and marked as canceled.");

            }
            else{

            }
        }
        populateTable();
    }//GEN-LAST:event_declineRequestTMActionPerformed

    private void hospitalTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hospitalTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hospitalTxtActionPerformed

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        int selectedRowIndex = TherapistEmployeeTbl.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to update.");
            return;
        }

        else{
            DefaultTableModel model = (DefaultTableModel) TherapistEmployeeTbl.getModel();
            HealthRequest healthRequest = (HealthRequest) model.getValueAt(selectedRowIndex, 0);

            healthRequest.setPriorityLevel(cbPL.getSelectedItem().toString());
            healthRequest.setType(hospitalTxt.getText());
            healthRequest.setComments(commentTxt.getText());

            JOptionPane.showMessageDialog(this, "Request has been updated.");
        }

       
        cbPL.setName("");
        hospitalTxt.setText("");
        commentTxt.setText("");

        populateTable();
    }//GEN-LAST:event_updateBtnActionPerformed

    private void theSearchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_theSearchBtnActionPerformed
        String s = TheSearchBarTxt.getText();
        newComFilter(s);
    }//GEN-LAST:event_theSearchBtnActionPerformed

    private void clearTheSearchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearTheSearchBtnActionPerformed
        String s = ("");
        newComFilter(s);
        TheSearchBarTxt.setText("");
    }//GEN-LAST:event_clearTheSearchBtnActionPerformed

    private void btnAssignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = TherapistEmployeeTbl.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row.");
            return;
        }

        else if(TherapistEmployeeTbl.getValueAt(selectedRowIndex, 2).equals("Canceled")) {
            JOptionPane.showMessageDialog(this, "Request was canceled, please make a new selection.");
        }

        else if(TherapistEmployeeTbl.getValueAt(selectedRowIndex, 2).equals("Completed")) {
            JOptionPane.showMessageDialog(this, "Request has already been completed.");
        }

        else if(TherapistEmployeeTbl.getValueAt(selectedRowIndex, 2).equals("Submitted")) {
            JOptionPane.showMessageDialog(this, "Please accept the request before proceeding.");
        }

        else if(TherapistEmployeeTbl.getValueAt(selectedRowIndex, 2).equals("In Progress")) {
            JOptionPane.showMessageDialog(this, "Request is already in progress.");
        }

        else if(TherapistEmployeeTbl.getValueAt(selectedRowIndex, 2).equals("Assigned")) {
            JOptionPane.showMessageDialog(this, "Request has already been assigned.");
        }

        else if(TherapistEmployeeTbl.getValueAt(selectedRowIndex, 2).equals("Accepted")) {

            HealthRequest healthRequest = (HealthRequest) ((TherapistOrganization)organization).getWorkQueue().getWorkQueueList().get(selectedRowIndex);

            String employeeName = cbAssignEmployee.getSelectedItem().toString();
            UserAccount userAccount1 = ((TherapistOrganization)organization).getUserAccountDirectory().findUserAccount(employeeName);
            healthRequest.setReceiver(userAccount1);
            healthRequest.setStatus("Assigned");
            userAccount1.getWorkQueue().addRequestToQueue(healthRequest);

            JOptionPane.showMessageDialog(this, "The request has been successfully assigned.");

        }

        populateTable();
    }//GEN-LAST:event_btnAssignActionPerformed

    private void btnViewTMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewTMActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = TherapistEmployeeTbl.getSelectedRow();

        if(selectedRowIndex<0){
            JOptionPane.showMessageDialog(this, "Please select a row to view.");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) TherapistEmployeeTbl.getModel();
        HealthRequest healthRequest = (HealthRequest) model.getValueAt(selectedRowIndex, 0);

        cbPL.setName(String.valueOf(healthRequest.getPriorityLevel()));
        hospitalTxt.setText(String.valueOf(healthRequest.getType()));
        commentTxt.setText(String.valueOf(healthRequest.getComments()));
        if(healthRequest.getReceiver() != null){
            cbAssignEmployee.setSelectedItem(healthRequest.getReceiver().getEmployee().getName());
        }else{
            cbAssignEmployee.setSelectedItem("");
        }
        cbPL.setSelectedItem(healthRequest.getPriorityLevel());
    }//GEN-LAST:event_btnViewTMActionPerformed

    private void cbPLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbPLActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbPLActionPerformed

    private void commentTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_commentTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_commentTxtActionPerformed

    public void newComFilter(String s) {
        DefaultTableModel model = (DefaultTableModel) TherapistEmployeeTbl.getModel();
        TableRowSorter<DefaultTableModel> t = new TableRowSorter<DefaultTableModel>(model);
        TherapistEmployeeTbl.setRowSorter(t);
        t.setRowFilter(RowFilter.regexFilter(s));

    }
    
    private void displayEmployeesInCombo(){
       
    for(UserAccount userAccount : organization.getUserAccountDirectory().getUserAccountList()){
         if(userAccount.getRole() instanceof TherapistOrgManagerRole) cbAssignEmployee.addItem(userAccount.getEmployee().getName());
     }
}
    
    
    private void populateTable() {
     DefaultTableModel model = (DefaultTableModel) TherapistEmployeeTbl.getModel();
        model.setRowCount(0);
           
        TherapistEmployeeTbl.setAutoCreateRowSorter(true);
        
        for (WorkRequest request : ((TherapistOrganization) organization).getWorkQueue().getWorkQueueList()) {
            Object[] row = new Object[8];
            row[0] = ((HealthRequest) request);
            row[1] = ((HealthRequest) request).getDateOfRequest();
            row[2] = ((HealthRequest) request).getStatus();
            row[3] = ((HealthRequest) request).getSender().getStudent().getName();
            row[4] = ((HealthRequest) request).getType();
            row[5] = ((HealthRequest) request).getComments();
            if(request.getStatus().equals("Assigned")){
                row[6] = ((HealthRequest) request).getReceiver().getEmployee().getName();
            }
            else if(request.getStatus().equals("Completed")){
                row[6] = ((HealthRequest) request).getReceiver().getEmployee().getName();
            }else{
                row[6] = "";
            }
            if(request.getStatus().equals("Completed")){
            row[7] = ((HealthRequest) request).getDateResolved();
            }
            else{
            row[7] = "";
            }
            
            model.addRow(row);
    }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AcceptRequestTM;
    private javax.swing.JTextField TheSearchBarTxt;
    private javax.swing.JTable TherapistEmployeeTbl;
    private javax.swing.JButton btnAssign;
    private javax.swing.JButton btnViewTM;
    private javax.swing.JComboBox<String> cbAssignEmployee;
    private javax.swing.JComboBox<String> cbPL;
    private javax.swing.JButton clearTheSearchBtn;
    private javax.swing.JTextField commentTxt;
    private javax.swing.JButton declineRequestTM;
    private javax.swing.JTextField hospitalTxt;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JLabel lblAssignEmployee;
    private javax.swing.JLabel lblDL;
    private javax.swing.JLabel lblDL1;
    private javax.swing.JLabel lblPL;
    private javax.swing.JLabel lblSearch;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JButton theSearchBtn;
    private javax.swing.JLabel uniEmpWelcomeTxt;
    private javax.swing.JButton updateBtn;
    // End of variables declaration//GEN-END:variables

    
}