/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.Role;

import Business.Organizations.Organization;
import Business.SendEmail.SendEmail;
import Business.Student.Student;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.AdvisingRequest;
import Business.WorkQueue.WorkQueue;
import Business.WorkQueue.WorkRequest;
import javax.swing.JPanel;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author ksiec
 */
public class UniversityEmployeeJPanel extends javax.swing.JPanel {

    private UserAccount userAccount;
    private JPanel userProcessContainer;
    private Organization organization;
    private SendEmail sendEmail;
    
    /**
     * Creates new form UniversityEmployeeJPanel
     */
    public UniversityEmployeeJPanel(JPanel userProcessContainer, UserAccount userAccount, Organization organization) {
        initComponents();
        this.userAccount = userAccount;
        this.userProcessContainer = userProcessContainer;
        this.organization = organization;
        uniEmpWelcomeTxt.setText("Welcome " + userAccount.getEmployee().getName() + "!");
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        advisingEmployeeTbl = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        advisingEmpSearchBtn1 = new javax.swing.JButton();
        advisingEmpClearBtn = new javax.swing.JButton();
        uniEmpSearchTxt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        acceptBtn = new javax.swing.JButton();
        processBtn = new javax.swing.JButton();
        uniEmpWelcomeTxt = new javax.swing.JLabel();

        setBackground(new java.awt.Color(186, 234, 186));
        setPreferredSize(new java.awt.Dimension(1050, 850));

        advisingEmployeeTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Priority Level", "Request Date", "Status", "Student Name", "Advising Type", "Comments", "Completed Date"
            }
        ));
        jScrollPane2.setViewportView(advisingEmployeeTbl);

        jScrollPane1.setViewportView(jScrollPane2);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setText("Academic Counselor Work Area");

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/images/CollegeImage2.png"))); // NOI18N

        advisingEmpSearchBtn1.setText("Search");
        advisingEmpSearchBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                advisingEmpSearchBtn1ActionPerformed(evt);
            }
        });

        advisingEmpClearBtn.setText("Clear Search");
        advisingEmpClearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                advisingEmpClearBtnActionPerformed(evt);
            }
        });

        uniEmpSearchTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uniEmpSearchTxtActionPerformed(evt);
            }
        });

        jLabel4.setText("Search Bar:");

        acceptBtn.setText("Accept Request");
        acceptBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acceptBtnActionPerformed(evt);
            }
        });

        processBtn.setText("Process Request");
        processBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processBtnActionPerformed(evt);
            }
        });

        uniEmpWelcomeTxt.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        uniEmpWelcomeTxt.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(uniEmpSearchTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 509, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(advisingEmpSearchBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(advisingEmpClearBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(acceptBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(processBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 967, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(26, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(uniEmpWelcomeTxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addGap(109, 109, 109))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(93, 93, 93)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(uniEmpWelcomeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(jLabel1)
                        .addGap(18, 138, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(advisingEmpSearchBtn1)
                            .addComponent(advisingEmpClearBtn)
                            .addComponent(jLabel4)
                            .addComponent(uniEmpSearchTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(acceptBtn)
                            .addComponent(processBtn))
                        .addContainerGap(182, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void advisingEmpSearchBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_advisingEmpSearchBtn1ActionPerformed
        String s = uniEmpSearchTxt.getText();
        newUniversityEmpFilter(s);
        
    }//GEN-LAST:event_advisingEmpSearchBtn1ActionPerformed

    private void advisingEmpClearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_advisingEmpClearBtnActionPerformed
        String s = ("");
        newUniversityEmpFilter(s);
        uniEmpSearchTxt.setText("");
        
    }//GEN-LAST:event_advisingEmpClearBtnActionPerformed

    private void uniEmpSearchTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uniEmpSearchTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_uniEmpSearchTxtActionPerformed

    private void acceptBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acceptBtnActionPerformed

        int selectedRow = advisingEmployeeTbl.getSelectedRow();
        
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row");
            return;
        }

        else if (advisingEmployeeTbl.getValueAt(selectedRow, 2).equals("Completed")) {

            JOptionPane.showMessageDialog(this, "Request has already been completed.");
        }

        else if (advisingEmployeeTbl.getValueAt(selectedRow, 2).equals("In Progress")) {
            JOptionPane.showMessageDialog(this, "Request is already in progress.");
        }

        else if (advisingEmployeeTbl.getValueAt(selectedRow, 2).equals("Canceled")) {
            JOptionPane.showMessageDialog(this, "Request was canceled, please make a new selection.");
        }

        else if (advisingEmployeeTbl.getValueAt(selectedRow, 2).equals("Assigned")) {
            AdvisingRequest advisingRequest = (AdvisingRequest) userAccount.getWorkQueue().getWorkQueueList().get(selectedRow);
            advisingRequest.setStatus("In Progress");
        }

        populateTable();
        
    }//GEN-LAST:event_acceptBtnActionPerformed

    private void processBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processBtnActionPerformed
        int selectedRow = advisingEmployeeTbl.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row");
            return;
        }

        if (advisingEmployeeTbl.getValueAt(selectedRow, 2).equals("Canceled")) {
            JOptionPane.showMessageDialog(this, "Request was canceled, please make a new selection.");

        } else if (advisingEmployeeTbl.getValueAt(selectedRow, 2).equals("Completed")) {
            JOptionPane.showMessageDialog(this, "Request has already been completed.");
            
        } else if (advisingEmployeeTbl.getValueAt(selectedRow, 2).equals("Assigned")){
            JOptionPane.showMessageDialog(this, "Please accept request before processing.");

        } else if (advisingEmployeeTbl.getValueAt(selectedRow, 2).equals("In Progress")) {
            int dialogInput = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog(this, "Request complete? ", "Complete Request", dialogInput);
            if (dialogResult == 0) {

                WorkQueue workQueue = userAccount.getWorkQueue();
                AdvisingRequest advisingRequest = (AdvisingRequest) workQueue.getWorkQueueList().get(selectedRow);
                advisingRequest.setStatus("Completed");
                advisingRequest.setDateResolved(new Date());

                Student student1 = advisingRequest.getSender().getStudent();

                SendEmail.sendEmail(advisingRequest.getSender().getStudent().getEmail(), student1);
               
                JOptionPane.showMessageDialog(this, "Request completed. Confirmation sent to Student.");

                populateTable();
            }
        }
    }//GEN-LAST:event_processBtnActionPerformed

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) advisingEmployeeTbl.getModel();
        model.setRowCount(0);
        
        advisingEmployeeTbl.setAutoCreateRowSorter(true);
        
        for (WorkRequest request : userAccount.getWorkQueue().getWorkQueueList()) {
            Object[] row = new Object[7];
            row[0] = ((AdvisingRequest) request);
            row[1] = ((AdvisingRequest) request).getDateOfRequest();
            row[2] = ((AdvisingRequest) request).getStatus();
            row[3] = ((AdvisingRequest) request).getSender().getStudent().getName();
            row[4] = ((AdvisingRequest) request).getAdvisingType();
            row[5] = ((AdvisingRequest) request).getComments();
            if(request.getStatus().equals("Completed")){
            row[6] = ((AdvisingRequest) request).getDateResolved();
            }
            else{
            row[6] = ""; 
            }
            
            model.addRow(row);
    }
    }
    
    
    
    
    public void newUniversityEmpFilter(String s) {
        DefaultTableModel model = (DefaultTableModel) advisingEmployeeTbl.getModel();
        TableRowSorter<DefaultTableModel> t = new TableRowSorter<DefaultTableModel>(model);
        advisingEmployeeTbl.setRowSorter(t);
        t.setRowFilter(RowFilter.regexFilter(s));

    }

    public SendEmail getSendEmail() {
        return sendEmail;
    }

    public void setSendEmail(SendEmail sendEmail) {
        this.sendEmail = sendEmail;
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton acceptBtn;
    private javax.swing.JButton advisingEmpClearBtn;
    private javax.swing.JButton advisingEmpSearchBtn1;
    private javax.swing.JTable advisingEmployeeTbl;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton processBtn;
    private javax.swing.JTextField uniEmpSearchTxt;
    private javax.swing.JLabel uniEmpWelcomeTxt;
    // End of variables declaration//GEN-END:variables
}
