/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.EnterpriseAdmin;

import Business.Employees.Employee;
import Business.Enterprises.Enterprise;
import Business.Organizations.Organization;
import Business.Organizations.OrganizationDirectory;
import Business.Roles.AcademicCounselorRole;
import Business.Roles.CommunityCulturalAidRole;
import Business.Roles.CommunityManagerRole;
import Business.Roles.DoctorRole;
import Business.Roles.FireDepartmentChiefRole;
import Business.Roles.FiremanRole;
import Business.Roles.HospitalManagerRole;
import Business.Roles.PoliceDepartmentChiefRole;
import Business.Roles.PoliceOfficerRole;
import Business.Roles.RealEstateAgentRole;
import Business.Roles.RealEstateCompanyManagerRole;
import Business.Roles.Role;
import Business.Roles.StudentRole;
import Business.Roles.TherapistRole;
import Business.Roles.UniversityDirectorRole;
import Business.UserAccount.UserAccount;
import Business.UserAccount.UserAccountDirectory;
import com.teamdev.jxmaps.i;
import static com.teamdev.jxmaps.internal.internal.e.j;
import com.teamdev.jxmaps.internal.internal.ipc.j;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import java.awt.Desktop;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.sl.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
//import org.apache.poi.ss.usermodel.Cell;
//import org.apache.poi.ss.usermodel.Row;
//import org.apache.poi.ss.usermodel.Sheet;
//import org.apache.poi.ss.usermodel.Workbook;
//import org.apache.poi.ss.usermodel.XSSWorkbook;


/**
 *
 * @author arfinansari
 */
public class AdminManageEmployeeJPanel extends javax.swing.JPanel {
    private Enterprise enterprise;
    private JPanel userProcessContainer;
    private OrganizationDirectory organizationDirectory;
    DefaultTableModel model;
    /**
     * Creates new form AdminManageEmployeeJPanel
     */
    public AdminManageEmployeeJPanel(JPanel userProcessContainer, Enterprise enterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.organizationDirectory = organizationDirectory;
        this.enterprise = enterprise;
        model = (DefaultTableModel) tblManageEmployee.getModel();
     //   populateOrganizationEmployeeComboBox();
     //   populateEmployeeRoleComboBox();
     //   populateTable();
     fillDataJTable(tblManageEmployee);
    }

        public void fillDataJTable(JTable jt){
            String[] columns = new String[]{
                "Organization","Employee Type","Employee Name","User Name","Password"
            };
            Object[][] data = new Object[][]{
                
                    {1,"Fire Department","Employee","Peter","Pet","Pet123"},
                    {},
                    {},
                    {4,"University","Manager","JAck","Pac","123"},
                };
            DefaultTableModel model = new DefaultTableModel(data,columns);
            jt.setModel(model);
            
        }
        
        public void openFile(String file){
            try{
                File path = new File(file);
                Desktop.getDesktop().open(path);
            } catch(IOException ioe){
                System.out.println(ioe);
            }
        }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        lblOrganization = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblManageEmployee = new javax.swing.JTable();
        lblEmployeeType = new javax.swing.JLabel();
        lblEmployeeName = new javax.swing.JLabel();
        lblUserName = new javax.swing.JLabel();
        lblPassword = new javax.swing.JLabel();
        cbOrganization = new javax.swing.JComboBox<>();
        cbEmployeeType = new javax.swing.JComboBox<>();
        txtEmployeeName = new javax.swing.JTextField();
        txtUserName = new javax.swing.JTextField();
        txtPassword = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        jPanel1.setBackground(new java.awt.Color(204, 255, 204));
        jPanel1.setMinimumSize(new java.awt.Dimension(1050, 1050));

        jButton1.setText("Save");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        lblOrganization.setText("Organization");

        tblManageEmployee.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Organization", "Employee Type", "Employee Name", "User Name", "Password"
            }
        ));
        jScrollPane1.setViewportView(tblManageEmployee);

        lblEmployeeType.setText("Employee Type");

        lblEmployeeName.setText("Employee Name");

        lblUserName.setText("User Name");

        lblPassword.setText("Password");

        cbOrganization.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Fire Department", "Hospital", "Multicultural", "Police", "Realtor", "Therapist", "University", " ", " " }));

        cbEmployeeType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hospital Manager", "Therapist", "Doctor", "Police Department Chief", "Police Officer", "Real Estate Manager", "Real Estate Agent", "Community Cultural Aid", "Community Manager", "University Director", "Academic Counsellor", "Student", "Fireman", "Fire Department Chief" }));

        txtPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPasswordActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Manage Employee");

        jButton2.setText("Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("View Report");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(278, 278, 278)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(lblEmployeeType, javax.swing.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE)
                        .addComponent(lblOrganization, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblEmployeeName)
                        .addComponent(lblUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(68, 68, 68)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cbEmployeeType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtEmployeeName)
                    .addComponent(cbOrganization, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtUserName)
                    .addComponent(txtPassword))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(456, 456, 456))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(146, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton3)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 846, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(58, 58, 58))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jButton2)
                            .addGap(75, 75, 75)))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(jButton2)
                .addGap(47, 47, 47)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblOrganization)
                    .addComponent(cbOrganization, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEmployeeType)
                    .addComponent(cbEmployeeType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblEmployeeName)
                    .addComponent(txtEmployeeName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblUserName)
                        .addGap(47, 47, 47)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPassword)
                            .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtUserName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48)
                .addComponent(jButton3)
                .addGap(0, 333, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Organization organization = (Organization) cbOrganization.getSelectedItem();

        UserAccountDirectory useraccountdirectory = organization.getUserAccountDirectory();
        String name = txtEmployeeName.getText();
        String username = txtUserName.getText();
        String password = txtPassword.getText();

        String empRole = cbEmployeeType.getSelectedItem().toString();

        int n = 0;
        Role role = null;

        switch (empRole) {

            case "Hospital Manager":

            n = 2;
            role = new HospitalManagerRole();
            break;

            case "Therapist":

            n = 3;
            role = new TherapistRole();
            break;

            case "Doctor":

            n = 4;
            role = new DoctorRole();
            break;

            case "PoliceDepartmentChief":

            n = 5;
            role = new PoliceDepartmentChiefRole();
            break;

            case "PoliceOffice":

            n = 6;
            role = new PoliceOfficerRole();
            break;

            case "RealEstateManager":

            n = 7;
            role = new RealEstateCompanyManagerRole();
            break;

            case "RealEstateAgent":

            n = 8;
            role = new RealEstateAgentRole();
            break;

            case "CommunityCulturalAid":

            n = 9;
            role = new CommunityCulturalAidRole();
            break;

            case "CommunityManager":

            n = 10;
            role = new CommunityManagerRole();
            break;

            case "UniversityDirector":

            n = 11;
            role = new UniversityDirectorRole();
            break;

            case "AcademicCounsellor":

            n = 12;
            role = new AcademicCounselorRole();
            break;

            case "Student":

            n = 13;
            role = new StudentRole();
            break;

            case "Fireman":

            n = 14;
            role = new FiremanRole();
            break;

            case "FireDepartmentChief":

            n = 15;
            role = new FireDepartmentChiefRole();
            break;

        }
        System.out.println(role);
        for(Employee employee : organization.getEmployeeDirectory().getEmployeeList()){
            if(employee.getName().equals(name)){
                JOptionPane.showMessageDialog(null, "please input another name");
                return;
            }
        }

        ArrayList<String>usernamecheck = new ArrayList<>();
        for(UserAccount user: organization.getUserAccountDirectory().getUserAccountList())
        {
            usernamecheck.add(user.getUsername());

        }
        if(usernamecheck.contains(username))
        {
            JOptionPane.showMessageDialog(null,"UserName already exists");
            return;
        }
        if(username.isEmpty()||password.isEmpty())
        {
            JOptionPane.showMessageDialog(null,"Please enter a Valid input");
            return;
        }

        // System.out.println(role);
        Employee employee = organization.getEmployeeDirectory().createEmployee("");

        //System.out.println(employee.getRole());
        UserAccount userAccount = organization.getUserAccountDirectory().createUserAccount(username, password, employee, role);

        //        for (Organization organization1 : this.enterprise.getOrganizationDirectory().getOrganizationList()) {
            //            for (UserAccount userAccount1 : organization1.getUserAccountDirectory().getUserAccountList()) {
                //                System.out.println(this.enterprise.getName() + organization.getName() + userAccount1.getUsername());
                //            }
            //        }
        populateTable();
        cbEmployeeType.setSelectedIndex(0);
        cbOrganization.setSelectedIndex(0);
        txtEmployeeName.setText("");
        txtUserName.setText("");
        txtPassword.setText("");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPasswordActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
    //Choose Location for saving excel sheet
 
        JFileChooser excelFileChooser = new JFileChooser("/Users/arfinansari");
        excelFileChooser.setDialogTitle("Save As");
        FileNameExtensionFilter fnef = new FileNameExtensionFilter("Organization","Employee Type","Employee Name","User Name","Password");
        excelFileChooser.setFileFilter(fnef);
        int excelChooser = excelFileChooser.showSaveDialog(null);
        
        //Check if save button is clicked
        if(excelChooser == JFileChooser.APPROVE_OPTION){
         
            //Import excel poi lib to netbeans
            XSSFWorkbook excelJTableExporter = new XSSFWorkbook();
            XSSFSheet excelSheet = excelJTableExporter.createSheet("Jtable Sheet");
            
            for (int i = 0; i < tblManageEmployee.getRowCount(); i++){
                XSSFRow excelRow = excelSheet.createRow(i);
            for (int j = 0); j < tblManageEmployee.getColumnCount(); j++){
                XSSFCell excelCell = excelRow.createCell(j);
           
            excelCell.setCellValue(tblManageEmployee.getValueAt(i, j).toString());}
        }
        }
        
        FileOutputStream excelFOU = new FileOutputStream(excelFileChooser.getSelectedFile() + ".xlsx");
        BufferedOutputStream excelBOU = new BufferedOutputStream(excelFOU);
        excelJTableExporter.write(excelBOU);
    } catch (FileNotFoundException ex){
    Logger.getLogger(AddDataToJTable.class.getName()).log(Level.SEVERE, null, ex);
} finally {
   try {
        excelFOU.close();
        
    }catch (IOExceotion ex){
        Logger.getLogger(AddDataToJTable.class.getName()).log(Level.SEVERE, null, ex);
        
    }
   /*     try{
            JFileChooser jFileChooser = new JFileChooser();
            jFileChooser.showSaveDialog(this);
            File saveFile = jFileChooser.getSelectedFile();
            
            File (saveFile !=null){
                saveFile = new File(saveFile.toString()+".xlsx");
                Workbook wb = new XSSFWorkbook();
                Sheet sheet = wb.createSheet("Organization");
                
                Row rowCol = sheet.createRow(0);
                for(int 1=0;i<tblManageEmployee.getColumnCount();i++){
                Cell cell = rowCol.createCell(i);
                cell.setCellValue(tblManageEmployee.getColumnName(i));
                
            }
                for(int j=0;j<tblManageEmployee.getRowCount();j++){
                    Row row = sheet.createRow(j);
                    for(int k=0;k<tblManageEmployee.getColumnCount();k++){
                        Cell cell = row.createCell(k);
                    
                        if(tblManageEmployee.getValueAt(j,k) !=null))
                        cell.setCellValue(tblManageEmployee.getValueAt(j, k).toString());
                    }
                }
        }
            FileOutputStream out = new FileOutputStream(new File(saveFile.toString()));
            wb.write(out);
            wb.close();
            out.close();
            openFile(saveFile.toString());
        } else{
                JOptionPane.showMessageDialog(null, "Error");
                }
    }catch(FileNotFoundException e){
    System.out.println(e);
}catch(IOException io){
    System.out.println(io);*/
    }//GEN-LAST:event_jButton3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cbEmployeeType;
    private javax.swing.JComboBox<String> cbOrganization;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblEmployeeName;
    private javax.swing.JLabel lblEmployeeType;
    private javax.swing.JLabel lblOrganization;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblUserName;
    private javax.swing.JTable tblManageEmployee;
    private javax.swing.JTextField txtEmployeeName;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JTextField txtUserName;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
      model.setRowCount(0);
        for (Organization organization : this.enterprise.getOrganizationDirectory().getOrganizationList()) {
            System.out.println(organization + "org");
            for (UserAccount useraccount : organization.getUserAccountDirectory().getUserAccountList()) {
//                System.out.println(useraccount + "user");
//                System.out.println(useraccount.getEmployee().getOrg() + "org");
//                System.out.println(useraccount.getEmployee().getRole() + "role");
//                System.out.println(useraccount.getEmployee().getName() + "name");
//                System.out.println(useraccount.getUsername() + "username");
//                System.out.println(useraccount.getPassword() + "password");
//                
                Object[] objs = {useraccount.getEmployee().getName(), useraccount.getEmployee().getName(),
                useraccount.getEmployee().getName(),useraccount.getUsername(),useraccount.getPassword()};
                        
                model.addRow(objs);
            }
        }
    }
}
